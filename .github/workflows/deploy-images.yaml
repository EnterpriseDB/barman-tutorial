name: Create and publish tutorial Docker images

on:
  push:
    branches: ['main']

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        step: [1, 2]
        environment: [backup, pg]
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    steps:
      # Make the image name lowercase
      - name: Lowercase repo name 
        run: |
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >>${GITHUB_ENV}
      - name: Checkout repository
        uses: actions/checkout@v4
      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`. If the build succeeds, it pushes the image to GitHub Packages.
      # It uses the `context` parameter to define the build's context as the set of files located in the specified path. For more information, see "[Usage](https://github.com/docker/build-push-action#usage)" in the README of the `docker/build-push-action` repository.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: build/step0${{ matrix.step }}/${{ matrix.environment }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:step0${{ matrix.step }}-${{ matrix.environment }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=Barman tutorial scenario
            org.opencontainers.image.licenses=Apache-2.0

